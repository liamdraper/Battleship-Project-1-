1. Define constants: 
    1. Markers object to hold the CSS added to the board elements
    2. Messages object to hold the messages displayed to the player
2. Define state variables
    1. 2 2-Dimensional arrays to represent each side of the board (null for empty squares, m for miss hits, s for ship, h for hit)
    2. 2 ship count variables representing how many ships left each side has
    3. Winner: 1 (player) / -1 (AI)
    4. Color variable for picking color of ships
    5. The last move made by player and AI
    6. ignoreClicks to prevent player from making a move during AI turn
    7. AI turn variables (lastMoveIsHit, adjMoveCount)
3. Define cached elements
    1. Play again button
    2. Message display
    3. Turn display for each side of board
    4. Pop-up menu elements
4. Upon loading the app should: 
    1. Render pop-up menu, waiting for player to pick color
    2. Initialize state variables
    3. Render page
        1. Both boards are rendered
        2. Player and AI have a random ship placement on board initialized
        3. Messages display to player
    4. Wait for player to click a square
5. Handle player clicking a square
    1. Changes board value, depending on hit or miss
    2. If player hits, subract from AI ship count
6. AI turn 
    1. Chooses a random square to hit on player board 
    2. If previous move hits, will attack adjacent squares
    3. If AI hits, subract from player ship count
7. If either side's ship count reaches 0, other side will win game
8. Handle a player clicking the replay button
    1. Board is cleared and state variables are reset


Icebox:
-Player can choose board placements
-Message displaying when ship is sunk
